// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sarchlab/akita/v4/mem/dram/internal/addressmapping (interfaces: Mapper)
//
// Generated by this command:
//
//	mockgen -destination mock_addressmapping_test.go -package dram -write_package_comment=false github.com/sarchlab/akita/v4/mem/dram/internal/addressmapping Mapper
//

package dram

import (
	reflect "reflect"

	addressmapping "github.com/sarchlab/akita/v4/mem/dram/internal/addressmapping"
	gomock "go.uber.org/mock/gomock"
)

// MockMapper is a mock of Mapper interface.
type MockMapper struct {
	ctrl     *gomock.Controller
	recorder *MockMapperMockRecorder
	isgomock struct{}
}

// MockMapperMockRecorder is the mock recorder for MockMapper.
type MockMapperMockRecorder struct {
	mock *MockMapper
}

// NewMockMapper creates a new mock instance.
func NewMockMapper(ctrl *gomock.Controller) *MockMapper {
	mock := &MockMapper{ctrl: ctrl}
	mock.recorder = &MockMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMapper) EXPECT() *MockMapperMockRecorder {
	return m.recorder
}

// Map mocks base method.
func (m *MockMapper) Map(addr uint64) addressmapping.Location {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Map", addr)
	ret0, _ := ret[0].(addressmapping.Location)
	return ret0
}

// Map indicates an expected call of Map.
func (mr *MockMapperMockRecorder) Map(addr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Map", reflect.TypeOf((*MockMapper)(nil).Map), addr)
}
