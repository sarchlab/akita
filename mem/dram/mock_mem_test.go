// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sarchlab/akita/v3/mem/mem (interfaces: AddressConverter)

package dram

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAddressConverter is a mock of AddressConverter interface.
type MockAddressConverter struct {
	ctrl     *gomock.Controller
	recorder *MockAddressConverterMockRecorder
}

// MockAddressConverterMockRecorder is the mock recorder for MockAddressConverter.
type MockAddressConverterMockRecorder struct {
	mock *MockAddressConverter
}

// NewMockAddressConverter creates a new mock instance.
func NewMockAddressConverter(ctrl *gomock.Controller) *MockAddressConverter {
	mock := &MockAddressConverter{ctrl: ctrl}
	mock.recorder = &MockAddressConverterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAddressConverter) EXPECT() *MockAddressConverterMockRecorder {
	return m.recorder
}

// ConvertExternalToInternal mocks base method.
func (m *MockAddressConverter) ConvertExternalToInternal(arg0 uint64) uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConvertExternalToInternal", arg0)
	ret0, _ := ret[0].(uint64)
	return ret0
}

// ConvertExternalToInternal indicates an expected call of ConvertExternalToInternal.
func (mr *MockAddressConverterMockRecorder) ConvertExternalToInternal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvertExternalToInternal", reflect.TypeOf((*MockAddressConverter)(nil).ConvertExternalToInternal), arg0)
}

// ConvertInternalToExternal mocks base method.
func (m *MockAddressConverter) ConvertInternalToExternal(arg0 uint64) uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConvertInternalToExternal", arg0)
	ret0, _ := ret[0].(uint64)
	return ret0
}

// ConvertInternalToExternal indicates an expected call of ConvertInternalToExternal.
func (mr *MockAddressConverterMockRecorder) ConvertInternalToExternal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvertInternalToExternal", reflect.TypeOf((*MockAddressConverter)(nil).ConvertInternalToExternal), arg0)
}
